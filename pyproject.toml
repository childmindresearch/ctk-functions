[project]
name = "ctk-functions"
version = "0.1.0"
description = "Clinician Toolkit API."
readme = "README.md"
requires-python = ">=3.12, <3.13"
dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.11.11",
    "fastapi[standard]>=0.115.6",
    "pycap>=2.6.0",
    "pydantic>=2.10.4",
    "pydantic-settings>=2.7.0",
    "pypandoc-binary>=1.14",
    "python-dateutil>=2.9.0.post0",
    "pytz>=2024.2",
    "spacy>=3.8.3",
    "en-core-web-sm",
    "jsonpickle>=4.0.1",
    "tenacity>=9.0.0",
    "cmi-docx>=0.3.11",
    "sqlalchemy>=2.0.39",
    "pyodbc>=5.2.0",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.14.0",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=6.0.0",
    "pytest-dotenv>=0.5.2",
    "pytest-mock>=3.14.0",
    "types-aiofiles>=24.1.0.20241221",
    "types-python-dateutil>=2.9.0.20241206",
    "types-pytz>=2024.2.0.20241221",
    "types-requests>=2.32.0.20241016",
    "ruff>=0.11.2",
]

[tool.uv.sources]
en-core-web-sm = { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.8.0/en_core_web_sm-3.8.0.tar.gz" }

[tool.hatch.build.targets.wheel]
packages = ["src/ctk_functions"]

[tool.pytest.ini_options]
pythonpath = [
    "src"
]
testpaths = [
    "tests"
]

[tool.mypy]
ignore_missing_imports = true
strict = true
plugins = ["pydantic.mypy"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv"
]
line-length = 88
indent-width = 4
src = ["src"]
target-version = "py311"

[tool.ruff.lint]
preview = false
select = ["ALL"]
ignore = [
    "PYI063", # Preview rule not correctly ignored.
    "SIM300", # Can cause mypy issues in SQLAlchemy where statements.
    # Recommended ignores by Astral https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
    "W191", # Tab indentation
    "E111", # Indentation with invalid multiple
    "E114", # Indentation with invalid multiple comment
    "E117", # Over indented
    "D206", # Docstring tab indentation
    "D300", # Triple single quotes
    "Q000", # Bad quotes inline string
    "Q001", # Bad quotes multiline string
    "Q002", # Bad quotes docstring
    "Q003", # Avoidable escaped quote
    "COM812", # Missing trailing comma
    "COM819", # Prohibited trailing comma
    "ISC002", # Multi-line implicit string concatenation
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts should be used in pytest
    "SLF001", # accessing private members in tests is fine
    "INP001", # tests should not be a module
    "ARG001" # tests can have ununsed arguments (fixtures with side-effects)
]
"local/**/*" = ["ALL"]

[tool.ruff.format]
preview = false
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.vulture]
min_confidence = 80
paths = ["src"]
sort_by_size = true
verbose = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
